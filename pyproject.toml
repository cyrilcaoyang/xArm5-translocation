[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "xarm-translocation"
version = "0.2.5"
authors = [
  { name="Yang Cao", email="cyrilcaoyang@gmail.com" },
]
description = "Comprehensive Python package for controlling UFACTORY xArm robots with integrated gripper and linear track support for translocation tasks"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
keywords = ["robotics", "xarm", "ufactory", "gripper", "linear-track", "translocation", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "xarm-python-sdk>=1.13.0",
    "PyYAML>=6.0",
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-mock>=3.0",
    "pytest-cov>=4.0",
    "pytest-docker>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "docker>=6.0"
]

[project.urls]
Homepage = "https://github.com/cyrilcao/xArm5-translocation"
Documentation = "https://github.com/cyrilcao/xArm5-translocation#readme"
Repository = "https://github.com/cyrilcao/xArm5-translocation.git"
Issues = "https://github.com/cyrilcao/xArm5-translocation/issues"

# [project.scripts]
# Note: Docker setup uses bash script at src/docker/docker_setup.sh

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.md", "*.html", "*.css", "*.js"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = "test_*.py"
python_classes = "Test*" 
python_functions = "test_*"
addopts = "--verbose --tb=short"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "docker: marks tests that require Docker (deselect with '-m \"not docker\"')"
]

[tool.readme]
# Note: Docker setup uses bash script at src/docker/docker_setup.sh
# For full setup, see README_DOCKER.md

[tool.coverage.run]

